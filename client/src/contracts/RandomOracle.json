{
  "contractName": "RandomOracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "trueOrFalse",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "betResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "randomNumber",
          "type": "uint256"
        }
      ],
      "name": "generatedRandomNumber",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "logNewProvableQuery",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ownerBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "queries",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "latestNumber",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomNumGenerator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setOwnerBalance",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"trueOrFalse\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"betResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"randomNumber\",\"type\":\"uint256\"}],\"name\":\"generatedRandomNumber\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"logNewProvableQuery\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"queries\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"latestNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomNumGenerator\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setOwnerBalance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/john/Desktop/project1/contracts/Coin.sol\":\"RandomOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/john/Desktop/project1/contracts/Coin.sol\":{\"keccak256\":\"0x26f60a4b961457be162fe72099dee89804f7cd5f9d4397be8b3dc1276b7f0944\",\"urls\":[\"bzz-raw://7bac43e8e1c125a9c40021c24b53241c09608db645dd7119793de46dc39e41be\",\"dweb:/ipfs/QmYnfsjefFzKBHR2rNqmw8ZGXtmP4VX6BRyk7NG48Vm8RX\"]},\"/Users/john/Desktop/project1/contracts/Provable.sol\":{\"keccak256\":\"0x2038317e22070df6659eb7457352a3aa913de2a6e7b3c5bb1fbbcaa44301c97d\",\"urls\":[\"bzz-raw://c287ba4bc764a913a00b9d01d13f64558eebfe01386e90d81480a59d3569fd4d\",\"dweb:/ipfs/Qmd8z55cc3XqdNz88JNiYMDvwc5HVpLJGAwYbTgcZj7y3A\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000636200006960201b60201c565b62002060565b6000809050600062030d40905060006200008c83600184620001b260201b60201c565b9050336008600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860008381526020019081526020016000206002018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed360405180806020018281038252601b8152602001807f42657420706c616365642c206177616974696e6720726573756c74000000000081525060200191505060405180910390a1505050565b60008083118015620001c5575060208311155b620001cf57600080fd5b600a84029350606060016040519080825280601f01601f1916602001820160405280156200020c5781602001600182028038833980820191505090505b5090508360f81b816000815181106200022157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015620002875781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015620002c15781602001600182028038833980820191505090505b5090506000620002d66200078560201b60201c565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f1916602001820160405280156200032b5781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f1916602001820160405280156200036b5781602001600182028038833980820191505090505b50905062000386826018600884600062000abe60201b60201c565b506200039162001f6f565b60405180608001604052808781526020018881526020018681526020018481525090506000620003fe6040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c62000b2060201b60201c565b9050606060086040519080825280601f01601f191660200182016040528015620004375781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a010000000000000000000000000000000000000000000000000000810460228301537901000000000000000000000000000000000000000000000000008104602183015378010000000000000000000000000000000000000000000000008104602083015350620007728282856001600481106200057857fe5b60200201516002876000600481106200058d57fe5b60200201516040518082805190602001908083835b60208310620005c75780518252602082019150602081019050602083039250620005a2565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156200060a573d6000803e3d6000fd5b5050506040513d60208110156200062057600080fd5b8101908080519060200190929190505050876002600481106200063f57fe5b60200201516040516020018085805190602001908083835b602083106200067c578051825260208201915060208101905060208303925062000657565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b60208310620006cf5780518252602082019150602081019050602083039250620006aa565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b6020831062000728578051825260208201915060208101905060208303925062000703565b6001836020036101000a0380198251168184511680821785525050505050509050019450505050506040516020818303038152906040528051906020012062000eb860201b60201c565b8199505050505050505050509392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620008165750600062000814600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ed460201b60201c565b145b1562000830576200082e600062000edf60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200089b57600080fd5b505af1158015620008b0573d6000803e3d6000fd5b505050506040513d6020811015620008c757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000a1457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200099757600080fd5b505af1158015620009ac573d6000803e3d6000fd5b505050506040513d6020811015620009c357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000a7c57600080fd5b505afa15801562000a91573d6000803e3d6000fd5b505050506040513d602081101562000aa857600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101562000ad657600080fd5b600086602001905060008460200190505b86886020010182101562000b11578189015180828801525060208201915060208101905062000ae7565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000bb15750600062000baf600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ed460201b60201c565b145b1562000bcb5762000bc9600062000edf60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000c3657600080fd5b505af115801562000c4b573d6000803e3d6000fd5b505050506040513d602081101562000c6257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462000daf57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801562000d3257600080fd5b505af115801562000d47573d6000803e3d6000fd5b505050506040513d602081101562000d5e57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801562000de857816020015b606081526020019060019003908162000dd25790505b5090508360006004811062000df957fe5b60200201518160008151811062000e0c57fe5b60200260200101819052508360016004811062000e2557fe5b60200201518160018151811062000e3857fe5b60200260200101819052508360026004811062000e5157fe5b60200201518160028151811062000e6457fe5b60200260200101819052508360036004811062000e7d57fe5b60200201518160038151811062000e9057fe5b602002602001018190525062000eae85828562000ef860201b60201c565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000813b9050919050565b600062000ef16200148c60201b60201c565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148062000f895750600062000f87600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1662000ed460201b60201c565b145b1562000fa35762000fa1600062000edf60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200100e57600080fd5b505af115801562001023573d6000803e3d6000fd5b505050506040513d60208110156200103a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200118757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200110a57600080fd5b505af11580156200111f573d6000803e3d6000fd5b505050506040513d60208110156200113657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156200121f57808201518184015260208101905062001202565b50505050905090810190601f1680156200124d5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156200126e57600080fd5b505af115801562001283573d6000803e3d6000fd5b505050506040513d60208110156200129a57600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115620012cf576000801b91505062001485565b6060620012e28562001a5b60201b60201c565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015620013885780820151818401526020810190506200136b565b50505050905090810190601f168015620013b65780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015620013f1578082015181840152602081019050620013d4565b50505050905090810190601f1680156200141f5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156200144257600080fd5b505af115801562001457573d6000803e3d6000fd5b50505050506040513d60208110156200146f57600080fd5b8101908080519060200190929190505050925050505b9392505050565b600080620014b4731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed62000ed460201b60201c565b11156200156057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620015566040518060400160405280600b81526020017f6574685f6d61696e6e657400000000000000000000000000000000000000000081525062001b1660201b60201c565b6001905062001a58565b60006200158773c03a2615d5efaf5f49f60b7bb6583eaec212fdf162000ed460201b60201c565b1115620016335773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016296040518060400160405280600c81526020017f6574685f726f707374656e33000000000000000000000000000000000000000081525062001b1660201b60201c565b6001905062001a58565b60006200165a73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e62000ed460201b60201c565b1115620017065773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620016fc6040518060400160405280600981526020017f6574685f6b6f76616e000000000000000000000000000000000000000000000081525062001b1660201b60201c565b6001905062001a58565b60006200172d73146500cfd35b22e4a392fe0adc06de1a1368ed4862000ed460201b60201c565b1115620017d95773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620017cf6040518060400160405280600b81526020017f6574685f72696e6b65627900000000000000000000000000000000000000000081525062001b1660201b60201c565b6001905062001a58565b60006200180073a2998efd205fb9d4b4963afb70778d6354ad3a4162000ed460201b60201c565b1115620018ac5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620018a26040518060400160405280600a81526020017f6574685f676f65726c690000000000000000000000000000000000000000000081525062001b1660201b60201c565b6001905062001a58565b6000620018d3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb47562000ed460201b60201c565b11156200193957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a58565b6000620019607320e12a1f859b3feae5fb2a0a32c18f5a65555bbf62000ed460201b60201c565b1115620019c6577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a58565b6000620019ed7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa62000ed460201b60201c565b111562001a53577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062001a58565b600090505b90565b606062001a6d62001b3260201b60201c565b62001a7762001f97565b62001a908161040062001b3e60201b620024361760201c565b62001aa68162001b8b60201b620024801760201c565b60008090505b835181101562001af25762001ae484828151811062001ac757fe5b60200260200101518362001ba160201b6200248e1790919060201c565b808060010191505062001aac565b5062001b098162001bd560201b620024b31760201c565b8060000151915050919050565b806002908051906020019062001b2e92919062001fb1565b5050565b60405180590338823950565b600081905060006020828162001b5057fe5b061462001b6b576020818162001b6257fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b62001b9e81600462001beb60201b60201c565b50565b62001bb6826002835162001c1360201b60201c565b62001bd0818362001d9b60201b620026221790919060201c565b505050565b62001be881600762001beb60201b60201c565b50565b62001c0f601f60058360ff16901b178362001e5b60201b620026cd1790919060201c565b5050565b6017811162001c485762001c428160058460ff16901b60ff16178462001e5b60201b620026cd1790919060201c565b62001d96565b60ff811162001c995762001c75601860058460ff16901b178462001e5b60201b620026cd1790919060201c565b62001c928160018562001ea460201b6200270d179092919060201c565b5062001d95565b61ffff811162001ceb5762001cc7601960058460ff16901b178462001e5b60201b620026cd1790919060201c565b62001ce48160028562001ea460201b6200270d179092919060201c565b5062001d94565b63ffffffff811162001d3f5762001d1b601a60058460ff16901b178462001e5b60201b620026cd1790919060201c565b62001d388160048562001ea460201b6200270d179092919060201c565b5062001d93565b67ffffffffffffffff811162001d925762001d73601b60058460ff16901b178462001e5b60201b620026cd1790919060201c565b62001d908160088562001ea460201b6200270d179092919060201c565b505b5b5b5b5b505050565b62001da562001f97565b8260200151836000015151835101111562001de65762001de583600262001dd88660200151865162001f1e60201b60201c565b0262001f3c60201b60201c565b5b60008060008451905085518051602081830101945086518101825260208701935050505b6020811062001e2f578151835260208301925060208201915060208103905062001e0a565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111562001e8a5762001e8982600284602001510262001f3c60201b60201c565b5b815180516020818301018381536001820183525050505050565b62001eae62001f97565b83602001518460000151518301111562001eed5762001eec84600262001edf87602001518662001f1e60201b60201c565b0262001f3c60201b60201c565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111562001f325782905062001f36565b8190505b92915050565b60608260000151905062001f57838362001b3e60201b60201c565b62001f69838262001d9b60201b60201c565b50505050565b60405180608001604052806004905b606081526020019060019003908162001f7e5790505090565b604051806040016040528060608152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062001ff457805160ff191683800117855562002025565b8280016001018555821562002025579182015b828111156200202457825182559160200191906001019062002007565b5b50905062002034919062002038565b5090565b6200205d91905b80821115620020595760008160009055506001016200203f565b5090565b90565b61291980620020706000396000f3fe60806040526004361061007b5760003560e01c8063a87430ba1161004e578063a87430ba1461034e578063bedcf003146103ba578063efafd28f146103e5578063fa6776db146103ef5761007b565b806321dfb6001461008057806327dc297e1461010957806338bbfa50146101db5780634ab5ab5b14610344575b600080fd5b34801561008c57600080fd5b506100b9600480360360208110156100a357600080fd5b81019080803590602001909291905050506103f9565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34801561011557600080fd5b506101d96004803603604081101561012c57600080fd5b81019080803590602001909291908035906020019064010000000081111561015357600080fd5b82018360208201111561016557600080fd5b8035906020019184600183028401116401000000008311171561018757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610443565b005b3480156101e757600080fd5b50610342600480360360608110156101fe57600080fd5b81019080803590602001909291908035906020019064010000000081111561022557600080fd5b82018360208201111561023757600080fd5b8035906020019184600183028401116401000000008311171561025957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102bc57600080fd5b8201836020820111156102ce57600080fd5b803590602001918460018302840111640100000000831117156102f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061057b565b005b61034c61059e565b005b34801561035a57600080fd5b5061039d6004803603602081101561037157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106df565b604051808381526020018281526020019250505060405180910390f35b3480156103c657600080fd5b506103cf610703565b6040518082815260200191505060405180910390f35b6103ed610709565b005b6103f76107de565b005b60086020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b61044b6108fc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048257600080fd5b60006002826040516020018082805190602001908083835b602083106104bd578051825260208201915060208101905060208303925061049a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161050257fe5b0690508260086000858152602001908152602001600020600201541415610576578060086000858152602001908152602001600020600001819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a15b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b6000809050600062030d40905060006105b983600184610c1b565b9050336008600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860008381526020019081526020016000206002018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed360405180806020018281038252601b8152602001807f42657420706c616365642c206177616974696e6720726573756c74000000000081525060200191505060405180910390a1505050565b60076020528060005260406000206000915090508060000154908060010154905082565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f596f7520617265206e6f7420746865206f776e6572000000000000000000000081525060200191505060405180910390fd5b34600560008282540192505081905550565b670de0b6b3a764000080341015610840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128bf6025913960400191505060405180910390fd5b6729a2241af62c00003411156108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061289a6025913960400191505060405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506108f961059e565b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061098457506000610982600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b156109955761099360006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b505050506040513d6020811015610a2957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b7257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610af757600080fd5b505af1158015610b0b573d6000803e3d6000fd5b505050506040513d6020811015610b2157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bdb57600080fd5b505af1158015610bef573d6000803e3d6000fd5b505050506040513d6020811015610c0557600080fd5b8101908080519060200190929190505050905090565b60008083118015610c2d575060208311155b610c3657600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610c725781602001600182028038833980820191505090505b5090508360f81b81600081518110610c8657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610ceb5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610d245781602001600182028038833980820191505090505b5090506000610d316111d2565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610d855781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610dc45781602001600182028038833980820191505090505b509050610dd782601860088460006114ef565b50610de06127b3565b60405180608001604052808781526020018881526020018681526020018481525090506000610e456040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c61154e565b9050606060086040519080825280601f01601f191660200182016040528015610e7d5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506111a3828285600160048110610fbc57fe5b6020020151600287600060048110610fd057fe5b60200201516040518082805190602001908083835b602083106110085780518252602082019150602081019050602083039250610fe5565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561104a573d6000803e3d6000fd5b5050506040513d602081101561105f57600080fd5b81019080805190602001909291905050508760026004811061107d57fe5b60200201516040516020018085805190602001908083835b602083106110b85780518252602082019150602081019050602083039250611095565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061110957805182526020820191506020810190506020830392506110e6565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611160578051825260208201915060208101905060208303925061113d565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206118bb565b8199505050505050505050509392505050565b6000813b9050919050565b60006111cb6118d7565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061125a57506000611258600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b1561126b5761126960006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112d557600080fd5b505af11580156112e9573d6000803e3d6000fd5b505050506040513d60208110156112ff57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461144857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113cd57600080fd5b505af11580156113e1573d6000803e3d6000fd5b505050506040513d60208110156113f757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114af57600080fd5b505afa1580156114c3573d6000803e3d6000fd5b505050506040513d60208110156114d957600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561150657600080fd5b600086602001905060008460200190505b86886020010182101561153f5781890151808288015250602082019150602081019050611517565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806115d6575060006115d4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b156115e7576115e560006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561165157600080fd5b505af1158015611665573d6000803e3d6000fd5b505050506040513d602081101561167b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117c457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561174957600080fd5b505af115801561175d573d6000803e3d6000fd5b505050506040513d602081101561177357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156117fb57816020015b60608152602001906001900390816117e65790505b5090508360006004811061180b57fe5b60200201518160008151811061181d57fe5b60200260200101819052508360016004811061183557fe5b60200201518160018151811061184757fe5b60200260200101819052508360026004811061185f57fe5b60200201518160028151811061187157fe5b60200260200101819052508360036004811061188957fe5b60200201518160038151811061189b57fe5b60200260200101819052506118b1858285611e2e565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806118f7731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6111b6565b111561199957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119906040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612390565b60019050611e2b565b60006119b873c03a2615d5efaf5f49f60b7bb6583eaec212fdf16111b6565b1115611a5a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a516040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611a7973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6111b6565b1115611b1b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b126040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611b3a73146500cfd35b22e4a392fe0adc06de1a1368ed486111b6565b1115611bdc5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd36040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611bfb73a2998efd205fb9d4b4963afb70778d6354ad3a416111b6565b1115611c9d5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c946040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611cbc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756111b6565b1115611d2057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b6000611d3f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6111b6565b1115611da3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b6000611dc27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6111b6565b1115611e26577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611eb657506000611eb4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b15611ec757611ec560006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f3157600080fd5b505af1158015611f45573d6000803e3d6000fd5b505050506040513d6020811015611f5b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120a457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561202957600080fd5b505af115801561203d573d6000803e3d6000fd5b505050506040513d602081101561205357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561213a57808201518184015260208101905061211f565b50505050905090810190601f1680156121675780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561218757600080fd5b505af115801561219b573d6000803e3d6000fd5b505050506040513d60208110156121b157600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156121e4576000801b915050612389565b60606121ef856123aa565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612293578082015181840152602081019050612278565b50505050905090810190601f1680156122c05780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156122f95780820151818401526020810190506122de565b50505050905090810190601f1680156123265780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561234857600080fd5b505af115801561235c573d6000803e3d6000fd5b50505050506040513d602081101561237357600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906123a69291906127da565b5050565b60606123b461242a565b6123bc61285a565b6123c881610400612436565b6123d181612480565b60008090505b8351811015612413576124068482815181106123ef57fe5b60200260200101518361248e90919063ffffffff16565b80806001019150506123d7565b5061241d816124b3565b8060000151915050919050565b60405180590338823950565b600081905060006020828161244757fe5b0614612460576020818161245757fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61248b8160046124c1565b50565b61249b82600283516124e2565b6124ae818361262290919063ffffffff16565b505050565b6124be8160076124c1565b50565b6124de601f60058360ff16901b17836126cd90919063ffffffff16565b5050565b6017811161250e576125098160058460ff16901b60ff1617846126cd90919063ffffffff16565b61261d565b60ff811161254f57612533601860058460ff16901b17846126cd90919063ffffffff16565b6125498160018561270d9092919063ffffffff16565b5061261c565b61ffff811161259157612575601960058460ff16901b17846126cd90919063ffffffff16565b61258b8160028561270d9092919063ffffffff16565b5061261b565b63ffffffff81116125d5576125b9601a60058460ff16901b17846126cd90919063ffffffff16565b6125cf8160048561270d9092919063ffffffff16565b5061261a565b67ffffffffffffffff811161261957612601601b60058460ff16901b17846126cd90919063ffffffff16565b6126178160088561270d9092919063ffffffff16565b505b5b5b5b5b505050565b61262a61285a565b8260200151836000015151835101111561265a5761265983600261265386602001518651612774565b02612790565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106126a1578151835260208301925060208201915060208103905061267e565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156126f3576126f2826002846020015102612790565b5b815180516020818301018381536001820183525050505050565b61271561285a565b8360200151846000015151830111156127435761274284600261273c876020015186612774565b02612790565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156127865782905061278a565b8190505b92915050565b6060826000015190506127a38383612436565b6127ad8382612622565b50505050565b60405180608001604052806004905b60608152602001906001900390816127c25790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061281b57805160ff1916838001178555612849565b82800160010185558215612849579182015b8281111561284857825182559160200191906001019061282d565b5b5090506128569190612874565b5090565b604051806040016040528060608152602001600081525090565b61289691905b8082111561289257600081600090555060010161287a565b5090565b9056fe536f7272792c2062757420746865206d6178696d756d206265742069732033206574686572536f7272792c2062757420746865206d696e696d756d206265742069732031206574686572a26469706673582212208730f231e80e5502cbf85d00dd9c8bad039ecd8c3bc022082c48981e0a353bf764736f6c63430006020033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063a87430ba1161004e578063a87430ba1461034e578063bedcf003146103ba578063efafd28f146103e5578063fa6776db146103ef5761007b565b806321dfb6001461008057806327dc297e1461010957806338bbfa50146101db5780634ab5ab5b14610344575b600080fd5b34801561008c57600080fd5b506100b9600480360360208110156100a357600080fd5b81019080803590602001909291905050506103f9565b604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b34801561011557600080fd5b506101d96004803603604081101561012c57600080fd5b81019080803590602001909291908035906020019064010000000081111561015357600080fd5b82018360208201111561016557600080fd5b8035906020019184600183028401116401000000008311171561018757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610443565b005b3480156101e757600080fd5b50610342600480360360608110156101fe57600080fd5b81019080803590602001909291908035906020019064010000000081111561022557600080fd5b82018360208201111561023757600080fd5b8035906020019184600183028401116401000000008311171561025957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102bc57600080fd5b8201836020820111156102ce57600080fd5b803590602001918460018302840111640100000000831117156102f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061057b565b005b61034c61059e565b005b34801561035a57600080fd5b5061039d6004803603602081101561037157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106df565b604051808381526020018281526020019250505060405180910390f35b3480156103c657600080fd5b506103cf610703565b6040518082815260200191505060405180910390f35b6103ed610709565b005b6103f76107de565b005b60086020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b61044b6108fc565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461048257600080fd5b60006002826040516020018082805190602001908083835b602083106104bd578051825260208201915060208101905060208303925061049a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161050257fe5b0690508260086000858152602001908152602001600020600201541415610576578060086000858152602001908152602001600020600001819055507fc13d60fe9dffdb6908d2d446cd18134373a51db0738ee04f296eeb9128121cbc816040518082815260200191505060405180910390a15b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b6000809050600062030d40905060006105b983600184610c1b565b9050336008600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860008381526020019081526020016000206002018190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055507f94f2559b5e2b297de3db1587daf2352e872ada3dad01dab9ee3733592fa22ed360405180806020018281038252601b8152602001807f42657420706c616365642c206177616974696e6720726573756c74000000000081525060200191505060405180910390a1505050565b60076020528060005260406000206000915090508060000154908060010154905082565b60055481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f596f7520617265206e6f7420746865206f776e6572000000000000000000000081525060200191505060405180910390fd5b34600560008282540192505081905550565b670de0b6b3a764000080341015610840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806128bf6025913960400191505060405180910390fd5b6729a2241af62c00003411156108a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061289a6025913960400191505060405180910390fd5b34600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506108f961059e565b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061098457506000610982600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b156109955761099360006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b505050506040513d6020811015610a2957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b7257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610af757600080fd5b505af1158015610b0b573d6000803e3d6000fd5b505050506040513d6020811015610b2157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610bdb57600080fd5b505af1158015610bef573d6000803e3d6000fd5b505050506040513d6020811015610c0557600080fd5b8101908080519060200190929190505050905090565b60008083118015610c2d575060208311155b610c3657600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610c725781602001600182028038833980820191505090505b5090508360f81b81600081518110610c8657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610ceb5781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610d245781602001600182028038833980820191505090505b5090506000610d316111d2565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610d855781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610dc45781602001600182028038833980820191505090505b509050610dd782601860088460006114ef565b50610de06127b3565b60405180608001604052808781526020018881526020018681526020018481525090506000610e456040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c61154e565b9050606060086040519080825280601f01601f191660200182016040528015610e7d5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506111a3828285600160048110610fbc57fe5b6020020151600287600060048110610fd057fe5b60200201516040518082805190602001908083835b602083106110085780518252602082019150602081019050602083039250610fe5565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561104a573d6000803e3d6000fd5b5050506040513d602081101561105f57600080fd5b81019080805190602001909291905050508760026004811061107d57fe5b60200201516040516020018085805190602001908083835b602083106110b85780518252602082019150602081019050602083039250611095565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061110957805182526020820191506020810190506020830392506110e6565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b60208310611160578051825260208201915060208101905060208303925061113d565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206118bb565b8199505050505050505050509392505050565b6000813b9050919050565b60006111cb6118d7565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061125a57506000611258600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b1561126b5761126960006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156112d557600080fd5b505af11580156112e9573d6000803e3d6000fd5b505050506040513d60208110156112ff57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461144857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113cd57600080fd5b505af11580156113e1573d6000803e3d6000fd5b505050506040513d60208110156113f757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156114af57600080fd5b505afa1580156114c3573d6000803e3d6000fd5b505050506040513d60208110156114d957600080fd5b8101908080519060200190929190505050905090565b606060008285019050808451101561150657600080fd5b600086602001905060008460200190505b86886020010182101561153f5781890151808288015250602082019150602081019050611517565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806115d6575060006115d4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b156115e7576115e560006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561165157600080fd5b505af1158015611665573d6000803e3d6000fd5b505050506040513d602081101561167b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117c457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561174957600080fd5b505af115801561175d573d6000803e3d6000fd5b505050506040513d602081101561177357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b606060046040519080825280602002602001820160405280156117fb57816020015b60608152602001906001900390816117e65790505b5090508360006004811061180b57fe5b60200201518160008151811061181d57fe5b60200260200101819052508360016004811061183557fe5b60200201518160018151811061184757fe5b60200260200101819052508360026004811061185f57fe5b60200201518160028151811061187157fe5b60200260200101819052508360036004811061188957fe5b60200201518160038151811061189b57fe5b60200260200101819052506118b1858285611e2e565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b6000806118f7731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6111b6565b111561199957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119906040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612390565b60019050611e2b565b60006119b873c03a2615d5efaf5f49f60b7bb6583eaec212fdf16111b6565b1115611a5a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a516040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611a7973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6111b6565b1115611b1b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b126040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611b3a73146500cfd35b22e4a392fe0adc06de1a1368ed486111b6565b1115611bdc5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd36040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611bfb73a2998efd205fb9d4b4963afb70778d6354ad3a416111b6565b1115611c9d5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c946040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250612390565b60019050611e2b565b6000611cbc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756111b6565b1115611d2057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b6000611d3f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6111b6565b1115611da3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b6000611dc27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6111b6565b1115611e26577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611e2b565b600090505b90565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611eb657506000611eb4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166111b6565b145b15611ec757611ec560006111c1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f3157600080fd5b505af1158015611f45573d6000803e3d6000fd5b505050506040513d6020811015611f5b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120a457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561202957600080fd5b505af115801561203d573d6000803e3d6000fd5b505050506040513d602081101561205357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561213a57808201518184015260208101905061211f565b50505050905090810190601f1680156121675780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561218757600080fd5b505af115801561219b573d6000803e3d6000fd5b505050506040513d60208110156121b157600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a7640000018111156121e4576000801b915050612389565b60606121ef856123aa565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015612293578082015181840152602081019050612278565b50505050905090810190601f1680156122c05780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b838110156122f95780820151818401526020810190506122de565b50505050905090810190601f1680156123265780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561234857600080fd5b505af115801561235c573d6000803e3d6000fd5b50505050506040513d602081101561237357600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906123a69291906127da565b5050565b60606123b461242a565b6123bc61285a565b6123c881610400612436565b6123d181612480565b60008090505b8351811015612413576124068482815181106123ef57fe5b60200260200101518361248e90919063ffffffff16565b80806001019150506123d7565b5061241d816124b3565b8060000151915050919050565b60405180590338823950565b600081905060006020828161244757fe5b0614612460576020818161245757fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61248b8160046124c1565b50565b61249b82600283516124e2565b6124ae818361262290919063ffffffff16565b505050565b6124be8160076124c1565b50565b6124de601f60058360ff16901b17836126cd90919063ffffffff16565b5050565b6017811161250e576125098160058460ff16901b60ff1617846126cd90919063ffffffff16565b61261d565b60ff811161254f57612533601860058460ff16901b17846126cd90919063ffffffff16565b6125498160018561270d9092919063ffffffff16565b5061261c565b61ffff811161259157612575601960058460ff16901b17846126cd90919063ffffffff16565b61258b8160028561270d9092919063ffffffff16565b5061261b565b63ffffffff81116125d5576125b9601a60058460ff16901b17846126cd90919063ffffffff16565b6125cf8160048561270d9092919063ffffffff16565b5061261a565b67ffffffffffffffff811161261957612601601b60058460ff16901b17846126cd90919063ffffffff16565b6126178160088561270d9092919063ffffffff16565b505b5b5b5b5b505050565b61262a61285a565b8260200151836000015151835101111561265a5761265983600261265386602001518651612774565b02612790565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106126a1578151835260208301925060208201915060208103905061267e565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156126f3576126f2826002846020015102612790565b5b815180516020818301018381536001820183525050505050565b61271561285a565b8360200151846000015151830111156127435761274284600261273c876020015186612774565b02612790565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b6000818311156127865782905061278a565b8190505b92915050565b6060826000015190506127a38383612436565b6127ad8382612622565b50505050565b60405180608001604052806004905b60608152602001906001900390816127c25790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061281b57805160ff1916838001178555612849565b82800160010185558215612849579182015b8281111561284857825182559160200191906001019061282d565b5b5090506128569190612874565b5090565b604051806040016040528060608152602001600081525090565b61289691905b8082111561289257600081600090555060010161287a565b5090565b9056fe536f7272792c2062757420746865206d6178696d756d206265742069732033206574686572536f7272792c2062757420746865206d696e696d756d206265742069732031206574686572a26469706673582212208730f231e80e5502cbf85d00dd9c8bad039ecd8c3bc022082c48981e0a353bf764736f6c63430006020033",
  "sourceMap": "155:3331:0:-:0;;;849:86;8:9:-1;5:2;;;30:1;27;20:12;5:2;849:86:0;888:10;880:5;;:18;;;;;;;;;;;;;;;;;;908:20;:18;;;:20;;:::i;:::-;155:3331;;1656:699;1711:29;1743:1;1711:33;;1754:24;1781:6;1754:33;;1798:16;1817:140;1856:21;247:1;1931:16;1817:25;;;:140;;:::i;:::-;1798:159;;2064:10;2032:7;:17;2040:8;2032:17;;;;;;;;;;;:29;;;:42;;;;;;;;;;;;;;;;;;2171:8;2143:7;:17;2151:8;2143:17;;;;;;;;;;;:25;;:36;;;;2274:8;2246:5;:17;2252:10;2246:17;;;;;;;;;;;;;;;:25;;:36;;;;2298:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:699;;;:::o;45118:2648:2:-;45220:16;45267:1;45257:7;:11;45256:32;;;;;45285:2;45274:7;:13;;45256:32;45248:41;;;;;;45309:2;45299:12;;;;45367:19;45399:1;45389:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45389:12:2;;;;45367:34;;45434:7;45423:20;;45411:6;45418:1;45411:9;;;;;;;;;;;:32;;;;;;;;;;;45453:19;45485:2;45475:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45475:13:2;;;;45453:35;;45498:27;45538:2;45528:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45528:13:2;;;;45498:43;;45551:30;45584:40;:38;;;:40;;:::i;:::-;45551:73;;45672:4;45664:6;45657:20;46023:11;46011:10;46007:28;46002:1;45992:8;45988:16;45978:27;45974:62;45967:4;45959:6;45955:17;45948:89;46073:4;46057:14;46050:28;46125:22;46118:4;46102:14;46098:25;46091:57;46167:18;46198:2;46188:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46188:13:2;;;;46167:34;;46259:6;46252:4;46245:5;46241:16;46234:32;46285:25;46323:1;46313:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46313:12:2;;;;46285:40;;46335;46345:5;46352:2;46356:1;46359:12;46373:1;46335:9;;;:40;;:::i;:::-;;46385:20;;:::i;:::-;:62;;;;;;;;46409:6;46385:62;;;;46417:6;46385:62;;;;46425:14;46385:62;;;;46441:5;46385:62;;;;;46457:15;46475:47;;;;;;;;;;;;;;;;;;46500:4;46506:15;46475:14;;;:47;;:::i;:::-;46457:65;;46532:30;46575:1;46565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46565:12:2;;;;46532:45;;46643:4;46629:12;46625:23;46619:30;46707:65;46704:1;46700:73;46693:4;46674:17;46670:28;46662:112;46832:63;46829:1;46825:71;46818:4;46799:17;46795:28;46787:110;46955:61;46952:1;46948:69;46941:4;46922:17;46918:28;46910:108;47076:59;47073:1;47069:67;47062:4;47043:17;47039:28;47031:106;47195:57;47192:1;47188:65;47181:4;47162:17;47158:28;47150:104;47312:55;47309:1;47305:63;47298:4;47279:17;47275:28;47267:102;47427:53;47424:1;47420:61;47413:4;47394:17;47390:28;47382:100;47540:51;47537:1;47533:59;47526:4;47507:17;47503:28;47495:98;46596:1007;47612:123;47644:7;47680:17;47699:4;47704:1;47699:7;;;;;;;;;;;47708:15;47715:4;47720:1;47715:7;;;;;;;;;;;47708:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47708:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47708:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47708:15:2;;;;;;;;;;;;;;;;47725:4;47730:1;47725:7;;;;;;;;;;;47663:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47663:70:2;;;47653:81;;;;;;47612:31;;;:123;;:::i;:::-;47752:7;47745:14;;;;;;;;;;;45118:2648;;;;;:::o;37708:169::-;37788:23;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;;;:25;;:::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;;;:35;;:::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;37830:8:::1;::::0;::::1;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;37830:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;37830:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;37830:40:2;;;;;;;;;;;;;;;;37823:47;;37708:169:::0;:::o;54417:693::-;54545:25;54582:14;54609:9;54599:7;:19;54582:36;;54650:9;54636:3;:10;:23;;54628:32;;;;;;54715:6;54729:11;54724:2;:16;54715:25;;54831:6;54845:9;54840:2;:14;54831:23;;54864:220;54895:7;54881:11;54876:2;:16;:26;54871:1;:32;54864:220;;;54974:1;54967:5;54963:13;54957:20;55014:3;55010:1;55005:3;55001:11;54994:24;54928:104;55050:2;55045:7;;;;55071:2;55066:7;;;;54864:220;;;55100:3;55093:10;;;;;54417:693;;;;;;;:::o;35113:377::-;35233:11;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;;;:25;;:::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;;;:35;;:::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;35256:22:::1;35293:1;35281:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35256:39;;35318:5;35324:1;35318:8;;;;;;;;;;;35305:7;35313:1;35305:10;;;;;;;;;;;;;:21;;;;35349:5;35355:1;35349:8;;;;;;;;;;;35336:7;35344:1;35336:10;;;;;;;;;;;;;:21;;;;35380:5;35386:1;35380:8;;;;;;;;;;;35367:7;35375:1;35367:10;;;;;;;;;;;;;:21;;;;35411:5;35417:1;35411:8;;;;;;;;;;;35398:7;35406:1;35398:10;;;;;;;;;;;;;:21;;;;35436:47;35451:11;35464:7;35473:9;35436:14;;;:47;;:::i;:::-;35429:54;;;35113:377:::0;;;;;:::o;47772:152::-;47906:11;47871:22;:32;47894:8;47871:32;;;;;;;;;;;:46;;;;47772:152;;:::o;37415:147::-;37474:10;37540:5;37528:18;37519:27;;37505:51;;;:::o;12639:205::-;12704:16;12816:21;:19;;;:21;;:::i;:::-;12809:28;;12639:205;;;:::o;29635:455::-;29754:11;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;;;:25;;:::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;;;:35;;:::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;29777:10:::1;29790:8:::0;::::1;;;;;;;;;;:17;;;29808:11;29821:9;29790:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29790:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;29790:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;29790:41:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;29790:41:2;;;;;;;;;;;;;;;;29777:54;;29877:9;29863:11;:23;29853:7;:33;29845:5;:41;29841:107;;;29909:1;29902:8:::0;::::1;;;;;;29841:107;29957:17;29977:14;29985:5;29977:7;;;:14;;:::i;:::-;29957:34;;30008:8;::::0;::::1;;;;;;;;;:28;;;30044:5;30051:1;30054:11;30067:4;30073:9;30008:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30008:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30008:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30008:75:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30008:75:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30008:75:2;;;;;;;;;;;;;;;;30001:82;;;;12156:1;29635:455:::0;;;;;:::o;13118:2031::-;13167:16;13257:1;13199:55;13211:42;13199:11;;;:55;;:::i;:::-;:59;13195:246;;;13310:42;13284:3;;:69;;;;;;;;;;;;;;;;;;13367:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13426:4;13419:11;;;;13195:246;13512:1;13454:55;13466:42;13454:11;;;:55;;:::i;:::-;:59;13450:255;;;13573:42;13547:3;;:69;;;;;;;;;;;;;;;;;;13630:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13690:4;13683:11;;;;13450:255;13776:1;13718:55;13730:42;13718:11;;;:55;;:::i;:::-;:59;13714:250;;;13835:42;13809:3;;:69;;;;;;;;;;;;;;;;;;13892:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13949:4;13942:11;;;;13714:250;14035:1;13977:55;13989:42;13977:11;;;:55;;:::i;:::-;:59;13973:254;;;14096:42;14070:3;;:69;;;;;;;;;;;;;;;;;;14153:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14212:4;14205:11;;;;13973:254;14298:1;14240:55;14252:42;14240:11;;;:55;;:::i;:::-;:59;14236:252;;;14358:42;14332:3;;:69;;;;;;;;;;;;;;;;;;14415:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14473:4;14466:11;;;;14236:252;14559:1;14501:55;14513:42;14501:11;;;:55;;:::i;:::-;:59;14497:202;;;14620:42;14594:3;;:69;;;;;;;;;;;;;;;;;;14684:4;14677:11;;;;14497:202;14770:1;14712:55;14724:42;14712:11;;;:55;;:::i;:::-;:59;14708:201;;;14830:42;14804:3;;:69;;;;;;;;;;;;;;;;;;14894:4;14887:11;;;;14708:201;14980:1;14922:55;14934:42;14922:11;;;:55;;:::i;:::-;:59;14918:203;;;15042:42;15016:3;;:69;;;;;;;;;;;;;;;;;;15106:4;15099:11;;;;14918:203;15137:5;15130:12;;13118:2031;;:::o;44747:365::-;44808:26;44846:19;:17;;;:19;;:::i;:::-;44875:24;;:::i;:::-;44909:22;44921:3;44926:4;44909:11;;;;;:22;;:::i;:::-;44941:16;:3;:14;;;;;:16;;:::i;:::-;44972:6;44981:1;44972:10;;44967:88;44988:4;:11;44984:1;:15;44967:88;;;45020:24;45036:4;45041:1;45036:7;;;;;;;;;;;;;;45020:3;:15;;;;;;:24;;;;:::i;:::-;45001:3;;;;;;;44967:88;;;;45064:17;:3;:15;;;;;:17;;:::i;:::-;45098:3;:7;;;45091:14;;;44747:365;;;:::o;12850:125::-;12955:13;12931:21;:37;;;;;;;;;;;;:::i;:::-;;12850:125;:::o;57984:174::-;58078:4;58072:11;58136:4;58127:7;58123:18;58111:10;58105:4;58096:46;58046:106;:::o;4345:434::-;4419:13;4435:9;4419:25;;4475:1;4469:2;4458:8;:13;;;;;;:18;4454:81;;4521:2;4510:8;:13;;;;;;4504:2;:20;4492:32;;;;4454:81;4560:8;4544:4;:13;;:24;;;;;4656:4;4650:11;4687:3;4681:4;4674:17;4716:1;4711:3;4704:14;4753:8;4748:3;4744:18;4738:4;4731:32;4625:148;;;;:::o;10557:128::-;10628:50;10655:4;8713:1;10628:26;;;:50;;:::i;:::-;10557:128;:::o;10172:178::-;10265:49;10276:4;8664:1;10300:6;:13;10265:10;;;:49;;:::i;:::-;10324:19;10336:6;10324:4;:11;;;;;;:19;;;;:::i;:::-;;10172:178;;:::o;10821:136::-;10893:57;10920:4;8875:1;10893:26;;;:57;;:::i;:::-;10821:136;:::o;9611:145::-;9711:38;9745:2;9740:1;9730:6;:11;;;;9729:18;9711:4;:11;;;;;;:38;;;;:::i;:::-;9611:145;;:::o;8883:722::-;8994:2;8984:6;:12;8980:619;;9012:42;9046:6;9041:1;9031:6;:11;;;;9030:22;;;9012:4;:11;;;;;;:42;;;;:::i;:::-;8980:619;;;9085:4;9075:6;:14;9071:528;;9105:38;9139:2;9134:1;9124:6;:11;;;;9123:18;9105:4;:11;;;;;;:38;;;;:::i;:::-;9157:25;9172:6;9180:1;9157:4;:14;;;;;;:25;;;;;:::i;:::-;;9071:528;;;9213:6;9203;:16;9199:400;;9235:38;9269:2;9264:1;9254:6;:11;;;;9253:18;9235:4;:11;;;;;;:38;;;;:::i;:::-;9287:25;9302:6;9310:1;9287:4;:14;;;;;;:25;;;;;:::i;:::-;;9199:400;;;9343:10;9333:6;:20;9329:270;;9369:38;9403:2;9398:1;9388:6;:11;;;;9387:18;9369:4;:11;;;;;;:38;;;;:::i;:::-;9421:25;9436:6;9444:1;9421:4;:14;;;;;;:25;;;;;:::i;:::-;;9329:270;;;9477:18;9467:6;:28;9463:136;;9511:38;9545:2;9540:1;9530:6;:11;;;;9529:18;9511:4;:11;;;;;;:38;;;;:::i;:::-;9563:25;9578:6;9586:1;9563:4;:14;;;;;;:25;;;;;:::i;:::-;;9463:136;9329:270;9199:400;9071:528;8980:619;8883:722;;;:::o;5405:1213::-;5484:21;;:::i;:::-;5554:4;:13;;;5536:4;:8;;;:15;5521:5;:12;:30;:46;5517:127;;;5583:50;5590:4;5631:1;5596:32;5600:4;:13;;;5615:5;:12;5596:3;;;:32;;:::i;:::-;:36;5583:6;;;:50;;:::i;:::-;5517:127;5653:9;5672:8;5690;5701:5;:12;5690:23;;5766:4;5760:11;5841:6;5835:13;5928:2;5919:6;5911;5907:19;5903:28;5895:36;;6051:5;6045:12;6037:6;6033:25;6025:6;6018:41;6114:2;6107:5;6103:14;6096:21;;5732:395;;6136:206;6149:2;6142:3;:9;6136:206;;6266:3;6260:10;6254:4;6247:24;6306:2;6298:10;;;;6329:2;6322:9;;;;6160:2;6153:9;;;;6136:206;;;6351:9;6383:1;6376:3;6371:2;:8;6363:3;:17;:21;6351:33;;6476:4;6472:9;6466:3;6460:10;6456:26;6528:4;6521;6515:11;6511:22;6572:7;6562:8;6559:21;6553:4;6546:35;6427:164;;6607:4;6600:11;;;;;;5405:1213;;;;:::o;6865:575::-;6964:4;:13;;;6960:1;6942:4;:8;;;:15;:19;:35;6938:97;;;6993:31;7000:4;7022:1;7006:4;:13;;;:17;6993:6;;;:31;;:::i;:::-;6938:97;7087:4;7081:11;7162:6;7156:13;7253:2;7244:6;7236;7232:19;7228:28;7351:5;7345:4;7337:20;7397:1;7389:6;7385:14;7377:6;7370:30;7053:381;;;;;:::o;7732:735::-;7817:21;;:::i;:::-;7879:4;:13;;;7861:4;:8;;;:15;7854:4;:22;:38;7850:111;;;7908:42;7915:4;7948:1;7921:24;7925:4;:13;;;7940:4;7921:3;;;:24;;:::i;:::-;:28;7908:6;;;:42;;:::i;:::-;7850:111;7970:9;7996:1;7989:4;7982:3;:11;:15;7970:27;;8050:4;8044:11;8125:6;8119:13;8216:4;8207:6;8199;8195:19;8191:30;8353:5;8345:4;8341:9;8334:4;8328:11;8324:27;8321:38;8315:4;8308:52;8400:4;8392:6;8388:17;8380:6;8373:33;8016:424;;;8456:4;8449:11;;;7732:735;;;;;:::o;4964:146::-;5017:9;5047:2;5042;:7;5038:47;;;5072:2;5065:9;;;;5038:47;5101:2;5094:9;;4964:146;;;;;:::o;4785:173::-;4860:19;4882:4;:8;;;4860:30;;4900:21;4905:4;4911:9;4900:4;;;:21;;:::i;:::-;4931:20;4938:4;4944:6;4931;;;:20;;:::i;:::-;;4785:173;;;:::o;155:3331:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "155:3331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;360:40:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;360:40:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:548;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1102:548:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1102:548:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1102:548:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1102:548:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1102:548:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1102:548:0;;;;;;;;;;;;;;;:::i;:::-;;15523:186:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15523:186:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15523:186:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15523:186:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15523:186:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15523:186:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15523:186:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15523:186:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15523:186:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15523:186:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15523:186:2;;;;;;;;;;;;;;;:::i;:::-;;1656:699:0;;;:::i;:::-;;317:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;317:37:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;317:37:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;259:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;259:24:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2365:92;;;:::i;:::-;;2467:229;;;:::i;:::-;;360:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1102:548::-;1210:20;:18;:20::i;:::-;1196:34;;:10;:34;;;1188:43;;;;;;1250:20;1321:1;1308:7;1291:25;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1291:25:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1291:25:0;;;1281:36;;;;;;1273:45;;:49;;;;;;1250:72;;1456:8;1427:7;:17;1435:8;1427:17;;;;;;;;;;;:25;;;:37;1423:221;;;1513:12;1480:7;:17;1488:8;1480:17;;;;;;;;;;;:30;;:45;;;;1598:35;1620:12;1598:35;;;;;;;;;;;;;;;;;;1423:221;1102:548;;;:::o;15523:186:2:-;15700:1;15692:10;;15655:22;:34;15686:1;15678:10;;15655:34;;;;;;;;;;;:47;;;;15523:186;;;:::o;1656:699:0:-;1711:29;1743:1;1711:33;;1754:24;1781:6;1754:33;;1798:16;1817:140;1856:21;247:1;1931:16;1817:25;:140::i;:::-;1798:159;;2064:10;2032:7;:17;2040:8;2032:17;;;;;;;;;;;:29;;;:42;;;;;;;;;;;;;;;;;;2171:8;2143:7;:17;2151:8;2143:17;;;;;;;;;;;:25;;:36;;;;2274:8;2246:5;:17;2252:10;2246:17;;;;;;;;;;;;;;;:25;;:36;;;;2298:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:699;;;:::o;317:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;259:24::-;;;;:::o;2365:92::-;790:5;;;;;;;;;;;776:19;;:10;:19;;;768:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:9:::1;2425:12;;:25;;;;;;;;;;;2365:92::o:0;2467:229::-;2513:7;662;649:9;:20;;641:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2553:7:::1;2540:9;:20;;2532:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:9;2612:5;:17;2618:10;2612:17;;;;;;;;;;;;;;;:25;;;:38;;;;;;;;;;;2669:20;:18;:20::i;:::-;2467:229:::0;:::o;37279:130:2:-;37339:24;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;:25::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;:35::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;37382:8:::1;::::0;::::1;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;37382:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;37382:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;37382:20:2;;;;;;;;;;;;;;;;37375:27;;37279:130:::0;:::o;45118:2648::-;45220:16;45267:1;45257:7;:11;45256:32;;;;;45285:2;45274:7;:13;;45256:32;45248:41;;;;;;45309:2;45299:12;;;;45367:19;45399:1;45389:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45389:12:2;;;;45367:34;;45434:7;45423:20;;45411:6;45418:1;45411:9;;;;;;;;;;;:32;;;;;;;;;;;45453:19;45485:2;45475:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45475:13:2;;;;45453:35;;45498:27;45538:2;45528:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45528:13:2;;;;45498:43;;45551:30;45584:40;:38;:40::i;:::-;45551:73;;45672:4;45664:6;45657:20;46023:11;46011:10;46007:28;46002:1;45992:8;45988:16;45978:27;45974:62;45967:4;45959:6;45955:17;45948:89;46073:4;46057:14;46050:28;46125:22;46118:4;46102:14;46098:25;46091:57;46167:18;46198:2;46188:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46188:13:2;;;;46167:34;;46259:6;46252:4;46245:5;46241:16;46234:32;46285:25;46323:1;46313:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46313:12:2;;;;46285:40;;46335;46345:5;46352:2;46356:1;46359:12;46373:1;46335:9;:40::i;:::-;;46385:20;;:::i;:::-;:62;;;;;;;;46409:6;46385:62;;;;46417:6;46385:62;;;;46425:14;46385:62;;;;46441:5;46385:62;;;;;46457:15;46475:47;;;;;;;;;;;;;;;;;;46500:4;46506:15;46475:14;:47::i;:::-;46457:65;;46532:30;46575:1;46565:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46565:12:2;;;;46532:45;;46643:4;46629:12;46625:23;46619:30;46707:65;46704:1;46700:73;46693:4;46674:17;46670:28;46662:112;46832:63;46829:1;46825:71;46818:4;46799:17;46795:28;46787:110;46955:61;46952:1;46948:69;46941:4;46922:17;46918:28;46910:108;47076:59;47073:1;47069:67;47062:4;47043:17;47039:28;47031:106;47195:57;47192:1;47188:65;47181:4;47162:17;47158:28;47150:104;47312:55;47309:1;47305:63;47298:4;47279:17;47275:28;47267:102;47427:53;47424:1;47420:61;47413:4;47394:17;47390:28;47382:100;47540:51;47537:1;47533:59;47526:4;47507:17;47503:28;47495:98;46596:1007;47612:123;47644:7;47680:17;47699:4;47704:1;47699:7;;;;;;;;;;;47708:15;47715:4;47720:1;47715:7;;;;;;;;;;;47708:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47708:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47708:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47708:15:2;;;;;;;;;;;;;;;;47725:4;47730:1;47725:7;;;;;;;;;;;47663:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;47663:70:2;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;47663:70:2;;;47653:81;;;;;;47612:31;:123::i;:::-;47752:7;47745:14;;;;;;;;;;;45118:2648;;;;;:::o;37415:147::-;37474:10;37540:5;37528:18;37519:27;;37505:51;;;:::o;12639:205::-;12704:16;12816:21;:19;:21::i;:::-;12809:28;;12639:205;;;:::o;37708:169::-;37788:23;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;:25::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;:35::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;37830:8:::1;::::0;::::1;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;37830:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;37830:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;37830:40:2;;;;;;;;;;;;;;;;37823:47;;37708:169:::0;:::o;54417:693::-;54545:25;54582:14;54609:9;54599:7;:19;54582:36;;54650:9;54636:3;:10;:23;;54628:32;;;;;;54715:6;54729:11;54724:2;:16;54715:25;;54831:6;54845:9;54840:2;:14;54831:23;;54864:220;54895:7;54881:11;54876:2;:16;:26;54871:1;:32;54864:220;;;54974:1;54967:5;54963:13;54957:20;55014:3;55010:1;55005:3;55001:11;54994:24;54928:104;55050:2;55045:7;;;;55071:2;55066:7;;;;54864:220;;;55100:3;55093:10;;;;;54417:693;;;;;;;:::o;35113:377::-;35233:11;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;:25::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;:35::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;35256:22:::1;35293:1;35281:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35256:39;;35318:5;35324:1;35318:8;;;;;;;;;;;35305:7;35313:1;35305:10;;;;;;;;;;;;;:21;;;;35349:5;35355:1;35349:8;;;;;;;;;;;35336:7;35344:1;35336:10;;;;;;;;;;;;;:21;;;;35380:5;35386:1;35380:8;;;;;;;;;;;35367:7;35375:1;35367:10;;;;;;;;;;;;;:21;;;;35411:5;35417:1;35411:8;;;;;;;;;;;35398:7;35406:1;35398:10;;;;;;;;;;;;;:21;;;;35436:47;35451:11;35464:7;35473:9;35436:14;:47::i;:::-;35429:54;;;35113:377:::0;;;;;:::o;47772:152::-;47906:11;47871:22;:32;47894:8;47871:32;;;;;;;;;;;:46;;;;47772:152;;:::o;13118:2031::-;13167:16;13257:1;13199:55;13211:42;13199:11;:55::i;:::-;:59;13195:246;;;13310:42;13284:3;;:69;;;;;;;;;;;;;;;;;;13367:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13426:4;13419:11;;;;13195:246;13512:1;13454:55;13466:42;13454:11;:55::i;:::-;:59;13450:255;;;13573:42;13547:3;;:69;;;;;;;;;;;;;;;;;;13630:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13690:4;13683:11;;;;13450:255;13776:1;13718:55;13730:42;13718:11;:55::i;:::-;:59;13714:250;;;13835:42;13809:3;;:69;;;;;;;;;;;;;;;;;;13892:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13949:4;13942:11;;;;13714:250;14035:1;13977:55;13989:42;13977:11;:55::i;:::-;:59;13973:254;;;14096:42;14070:3;;:69;;;;;;;;;;;;;;;;;;14153:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14212:4;14205:11;;;;13973:254;14298:1;14240:55;14252:42;14240:11;:55::i;:::-;:59;14236:252;;;14358:42;14332:3;;:69;;;;;;;;;;;;;;;;;;14415:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14473:4;14466:11;;;;14236:252;14559:1;14501:55;14513:42;14501:11;:55::i;:::-;:59;14497:202;;;14620:42;14594:3;;:69;;;;;;;;;;;;;;;;;;14684:4;14677:11;;;;14497:202;14770:1;14712:55;14724:42;14712:11;:55::i;:::-;:59;14708:201;;;14830:42;14804:3;;:69;;;;;;;;;;;;;;;;;;14894:4;14887:11;;;;14708:201;14980:1;14922:55;14934:42;14922:11;:55::i;:::-;:59;14918:203;;;15042:42;15016:3;;:69;;;;;;;;;;;;;;;;;;15106:4;15099:11;;;;14918:203;15137:5;15130:12;;13118:2031;;:::o;29635:455::-;29754:11;11931:1;11907:26;;11915:3;;;;;;;;;;;11907:26;;;11906:64;;;;11968:1;11939:25;11959:3;;;;;;;;;;;11939:11;:25::i;:::-;:30;11906:64;11902:130;;;11986:35;11563:1;11986:19;:35::i;:::-;;11902:130;12066:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12066:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12066:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12066:16:2;;;;;;;;;;;;;;;;12045:37;;12053:8;;;;;;;;;;;12045:37;;;12041:106;;12119:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12119:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12119:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12119:16:2;;;;;;;;;;;;;;;;12098:8;;:38;;;;;;;;;;;;;;;;;;12041:106;29777:10:::1;29790:8:::0;::::1;;;;;;;;;;:17;;;29808:11;29821:9;29790:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;29790:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;29790:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;29790:41:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;29790:41:2;;;;;;;;;;;;;;;;29777:54;;29877:9;29863:11;:23;29853:7;:33;29845:5;:41;29841:107;;;29909:1;29902:8:::0;::::1;;;;;;29841:107;29957:17;29977:14;29985:5;29977:7;:14::i;:::-;29957:34;;30008:8;::::0;::::1;;;;;;;;;:28;;;30044:5;30051:1;30054:11;30067:4;30073:9;30008:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30008:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30008:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27::::0;20:12:::1;5:2;30008:75:2;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;30008:75:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;30008:75:2;;;;;;;;;;;;;;;;30001:82;;;;12156:1;29635:455:::0;;;;;:::o;12850:125::-;12955:13;12931:21;:37;;;;;;;;;;;;:::i;:::-;;12850:125;:::o;44747:365::-;44808:26;44846:19;:17;:19::i;:::-;44875:24;;:::i;:::-;44909:22;44921:3;44926:4;44909:11;:22::i;:::-;44941:16;:3;:14;:16::i;:::-;44972:6;44981:1;44972:10;;44967:88;44988:4;:11;44984:1;:15;44967:88;;;45020:24;45036:4;45041:1;45036:7;;;;;;;;;;;;;;45020:3;:15;;:24;;;;:::i;:::-;45001:3;;;;;;;44967:88;;;;45064:17;:3;:15;:17::i;:::-;45098:3;:7;;;45091:14;;;44747:365;;;:::o;57984:174::-;58078:4;58072:11;58136:4;58127:7;58123:18;58111:10;58105:4;58096:46;58046:106;:::o;4345:434::-;4419:13;4435:9;4419:25;;4475:1;4469:2;4458:8;:13;;;;;;:18;4454:81;;4521:2;4510:8;:13;;;;;;4504:2;:20;4492:32;;;;4454:81;4560:8;4544:4;:13;;:24;;;;;4656:4;4650:11;4687:3;4681:4;4674:17;4716:1;4711:3;4704:14;4753:8;4748:3;4744:18;4738:4;4731:32;4625:148;;;;:::o;10557:128::-;10628:50;10655:4;8713:1;10628:26;:50::i;:::-;10557:128;:::o;10172:178::-;10265:49;10276:4;8664:1;10300:6;:13;10265:10;:49::i;:::-;10324:19;10336:6;10324:4;:11;;:19;;;;:::i;:::-;;10172:178;;:::o;10821:136::-;10893:57;10920:4;8875:1;10893:26;:57::i;:::-;10821:136;:::o;9611:145::-;9711:38;9745:2;9740:1;9730:6;:11;;;;9729:18;9711:4;:11;;:38;;;;:::i;:::-;9611:145;;:::o;8883:722::-;8994:2;8984:6;:12;8980:619;;9012:42;9046:6;9041:1;9031:6;:11;;;;9030:22;;;9012:4;:11;;:42;;;;:::i;:::-;8980:619;;;9085:4;9075:6;:14;9071:528;;9105:38;9139:2;9134:1;9124:6;:11;;;;9123:18;9105:4;:11;;:38;;;;:::i;:::-;9157:25;9172:6;9180:1;9157:4;:14;;:25;;;;;:::i;:::-;;9071:528;;;9213:6;9203;:16;9199:400;;9235:38;9269:2;9264:1;9254:6;:11;;;;9253:18;9235:4;:11;;:38;;;;:::i;:::-;9287:25;9302:6;9310:1;9287:4;:14;;:25;;;;;:::i;:::-;;9199:400;;;9343:10;9333:6;:20;9329:270;;9369:38;9403:2;9398:1;9388:6;:11;;;;9387:18;9369:4;:11;;:38;;;;:::i;:::-;9421:25;9436:6;9444:1;9421:4;:14;;:25;;;;;:::i;:::-;;9329:270;;;9477:18;9467:6;:28;9463:136;;9511:38;9545:2;9540:1;9530:6;:11;;;;9529:18;9511:4;:11;;:38;;;;:::i;:::-;9563:25;9578:6;9586:1;9563:4;:14;;:25;;;;;:::i;:::-;;9463:136;9329:270;9199:400;9071:528;8980:619;8883:722;;;:::o;5405:1213::-;5484:21;;:::i;:::-;5554:4;:13;;;5536:4;:8;;;:15;5521:5;:12;:30;:46;5517:127;;;5583:50;5590:4;5631:1;5596:32;5600:4;:13;;;5615:5;:12;5596:3;:32::i;:::-;:36;5583:6;:50::i;:::-;5517:127;5653:9;5672:8;5690;5701:5;:12;5690:23;;5766:4;5760:11;5841:6;5835:13;5928:2;5919:6;5911;5907:19;5903:28;5895:36;;6051:5;6045:12;6037:6;6033:25;6025:6;6018:41;6114:2;6107:5;6103:14;6096:21;;5732:395;;6136:206;6149:2;6142:3;:9;6136:206;;6266:3;6260:10;6254:4;6247:24;6306:2;6298:10;;;;6329:2;6322:9;;;;6160:2;6153:9;;;;6136:206;;;6351:9;6383:1;6376:3;6371:2;:8;6363:3;:17;:21;6351:33;;6476:4;6472:9;6466:3;6460:10;6456:26;6528:4;6521;6515:11;6511:22;6572:7;6562:8;6559:21;6553:4;6546:35;6427:164;;6607:4;6600:11;;;;;;5405:1213;;;;:::o;6865:575::-;6964:4;:13;;;6960:1;6942:4;:8;;;:15;:19;:35;6938:97;;;6993:31;7000:4;7022:1;7006:4;:13;;;:17;6993:6;:31::i;:::-;6938:97;7087:4;7081:11;7162:6;7156:13;7253:2;7244:6;7236;7232:19;7228:28;7351:5;7345:4;7337:20;7397:1;7389:6;7385:14;7377:6;7370:30;7053:381;;;;;:::o;7732:735::-;7817:21;;:::i;:::-;7879:4;:13;;;7861:4;:8;;;:15;7854:4;:22;:38;7850:111;;;7908:42;7915:4;7948:1;7921:24;7925:4;:13;;;7940:4;7921:3;:24::i;:::-;:28;7908:6;:42::i;:::-;7850:111;7970:9;7996:1;7989:4;7982:3;:11;:15;7970:27;;8050:4;8044:11;8125:6;8119:13;8216:4;8207:6;8199;8195:19;8191:30;8353:5;8345:4;8341:9;8334:4;8328:11;8324:27;8321:38;8315:4;8308:52;8400:4;8392:6;8388:17;8380:6;8373:33;8016:424;;;8456:4;8449:11;;;7732:735;;;;;:::o;4964:146::-;5017:9;5047:2;5042;:7;5038:47;;;5072:2;5065:9;;;;5038:47;5101:2;5094:9;;4964:146;;;;;:::o;4785:173::-;4860:19;4882:4;:8;;;4860:30;;4900:21;4905:4;4911:9;4900:4;:21::i;:::-;4931:20;4938:4;4944:6;4931;:20::i;:::-;;4785:173;;;:::o;155:3331:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 < 0.7.0;\n\n// import \"github.com/oraclize/ethereum-api/provableAPI.sol\";\nimport \"./Provable.sol\";\n\ncontract RandomOracle is usingProvable {\n\n    uint256 constant NUM_RANDOM_BYTES_REQUESTED = 1;\n    \n    uint public ownerBalance;\n    address payable owner;\n\n    mapping(address => User) public users;\n    mapping(bytes32 => Query) public queries;\n\n    struct User {\n        uint balance;\n        bytes32 queryId;\n    }\n    \n    struct Query {\n        uint256 latestNumber;\n        address userAddress;\n        bytes32 queryId;\n    }\n    \n    modifier minimumBet(uint deposit) {\n        require(msg.value >= deposit, \"Sorry, but the minimum bet is 1 ether\");\n        _;\n    }\n    \n    modifier isOwner() {\n        require(msg.sender == owner, \"You are not the owner\");\n        _;\n    }\n    \n    constructor() public {\n        owner = msg.sender;\n        randomNumGenerator();\n    }\n\n    event logNewProvableQuery(string description);\n    event generatedRandomNumber(uint256 randomNumber);\n    event betResult(bool trueOrFalse, string result);\n\n    function __callback(bytes32 _queryId,string memory _result) public override {\n        require(msg.sender == provable_cbAddress());\n        \n        uint256 randomNumber = uint256(keccak256(abi.encodePacked(_result))) % 2;\n        \n        // If the queries id is the same as the callback id set the randomNumber.\n        if (queries[_queryId].queryId == _queryId) {\n            queries[_queryId].latestNumber = randomNumber;\n            \n            // payWinner();\n            \n            emit generatedRandomNumber(randomNumber);\n        }\n    }\n\n    function randomNumGenerator() payable public {\n        uint256 QUERY_EXECUTION_DELAY = 0;\n        uint256 GAS_FOR_CALLBACK = 200000;\n\n        bytes32 _queryId = provable_newRandomDSQuery(\n            QUERY_EXECUTION_DELAY,\n            NUM_RANDOM_BYTES_REQUESTED,\n            GAS_FOR_CALLBACK\n        );\n        \n        //Set the sender address to the queries object.\n        queries[_queryId].userAddress = msg.sender;\n        \n        //Set the query id to the queries object.\n        queries[_queryId].queryId = _queryId;\n        \n        //Set the query id to the users object.\n        users[msg.sender].queryId = _queryId;\n\n        emit logNewProvableQuery(\"Bet placed, awaiting result\");\n    }\n    \n    function setOwnerBalance() public payable isOwner {\n        ownerBalance += msg.value;\n    }\n    \n    function startBet() public payable minimumBet(1 ether) {\n        require(msg.value <= 3 ether, \"Sorry, but the maximum bet is 3 ether\");\n        users[msg.sender].balance += msg.value;\n        \n        randomNumGenerator();\n    }\n    \n    function playerWins() private returns(uint) {\n        uint pb = users[msg.sender].balance * 2;\n        ownerBalance = ownerBalance - users[msg.sender].balance;\n        users[msg.sender].balance = 0;\n        msg.sender.transfer(pb);\n        emit betResult(true, \"You win!\");\n\n        return users[msg.sender].balance;\n    }\n    \n    function ownerWins() private returns(uint) {\n        ownerBalance = ownerBalance + users[msg.sender].balance;\n        users[msg.sender].balance = 0;\n        emit betResult(false, \"You lose... Try again!\");\n\n        return ownerBalance;\n    }\n    \n    function payWinner() private returns(uint) {\n        if(queries[users[msg.sender].queryId].latestNumber == 1) {\n            playerWins();\n        } else {\n            ownerWins();\n        }\n    }\n}\n",
  "sourcePath": "/Users/john/Desktop/project1/contracts/Coin.sol",
  "ast": {
    "absolutePath": "/Users/john/Desktop/project1/contracts/Coin.sol",
    "exportedSymbols": {
      "RandomOracle": [
        328
      ]
    },
    "id": 329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "absolutePath": "/Users/john/Desktop/project1/contracts/Provable.sol",
        "file": "./Provable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 329,
        "sourceUnit": 6777,
        "src": "129:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6776,
              "src": "180:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6776",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "180:13:0"
          }
        ],
        "contractDependencies": [
          6776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 328,
        "linearizedBaseContracts": [
          328,
          6776
        ],
        "name": "RandomOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 7,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "201:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "247:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "bedcf003",
            "id": 9,
            "name": "ownerBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "259:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "259:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "289:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "289:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 15,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "317:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
              "typeString": "mapping(address => struct RandomOracle.User)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                "typeString": "mapping(address => struct RandomOracle.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 24,
                "src": "336:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$24_storage_ptr",
                  "typeString": "struct RandomOracle.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21dfb600",
            "id": 19,
            "name": "queries",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "360:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
              "typeString": "mapping(bytes32 => struct RandomOracle.Query)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "368:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "360:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                "typeString": "mapping(bytes32 => struct RandomOracle.Query)"
              },
              "valueType": {
                "contractScope": null,
                "id": 17,
                "name": "Query",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 31,
                "src": "379:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Query_$31_storage_ptr",
                  "typeString": "struct RandomOracle.Query"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "RandomOracle.User",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 21,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "429:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "451:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 328,
            "src": "407:66:0",
            "visibility": "public"
          },
          {
            "canonicalName": "RandomOracle.Query",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "latestNumber",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "506:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "536:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "536:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "565:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Query",
            "nodeType": "StructDefinition",
            "scope": 328,
            "src": "483:104:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "631:98:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "649:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "649:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "649:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c2062757420746865206d696e696d756d206265742069732031206574686572",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "671:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e81ac8b440c21006e16629632c61e6e09703656d8949ba991325bbf09f1e1f71",
                          "typeString": "literal_string \"Sorry, but the minimum bet is 1 ether\""
                        },
                        "value": "Sorry, but the minimum bet is 1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e81ac8b440c21006e16629632c61e6e09703656d8949ba991325bbf09f1e1f71",
                          "typeString": "literal_string \"Sorry, but the minimum bet is 1 ether\""
                        }
                      ],
                      "id": 35,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "641:70:0"
                },
                {
                  "id": 43,
                  "nodeType": "PlaceholderStatement",
                  "src": "721:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "name": "minimumBet",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "deposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 45,
                  "src": "617:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:14:0"
            },
            "src": "597:132:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "758:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "776:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "776:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "790:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "776:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "797:23:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        },
                        "value": "You are not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "768:53:0"
                },
                {
                  "id": 55,
                  "nodeType": "PlaceholderStatement",
                  "src": "831:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:0"
            },
            "src": "739:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "870:65:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "880:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "888:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "888:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "880:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "880:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 65,
                      "name": "randomNumGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "908:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "908:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "870:0:0"
            },
            "scope": 328,
            "src": "849:86:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 73,
            "name": "logNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "967:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:20:0"
            },
            "src": "941:46:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 77,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1020:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:22:0"
            },
            "src": "992:50:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 83,
            "name": "betResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "name": "trueOrFalse",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1063:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1081:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1062:33:0"
            },
            "src": "1047:49:0"
          },
          {
            "baseFunctions": [
              1408
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1178:472:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1196:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1196:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 94,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "1210:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1210:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1196:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1188:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:43:0"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 132,
                      "src": "1250:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 106,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87,
                                  "src": "1308:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 104,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1291:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1291:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1291:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 103,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1281:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1273:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1273:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1321:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1273:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:72:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1427:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "1435:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1427:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1427:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1456:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1427:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 131,
                  "nodeType": "IfStatement",
                  "src": "1423:221:0",
                  "trueBody": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1466:178:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 119,
                                "name": "queries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "1480:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                                  "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 120,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "1488:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1480:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Query_$31_storage",
                                "typeString": "struct RandomOracle.Query storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "latestNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "1480:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1513:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1480:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "1480:45:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "randomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "1620:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 126,
                            "name": "generatedRandomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1598:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1598:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "EmitStatement",
                        "src": "1593:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1169:8:0"
            },
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1122:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1139:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1121:40:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:0"
            },
            "scope": 328,
            "src": "1102:548:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1701:654:0",
              "statements": [
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1711:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1711:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1743:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1711:33:0"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1754:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1754:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1781:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1754:33:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "name": "_queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1798:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1798:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1856:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1891:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1931:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 146,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "1817:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:140:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:159:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 154,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2040:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2032:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2032:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2064:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2064:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2032:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 160,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2143:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 162,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2151:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2143:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2143:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2171:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2143:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2246:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 170,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2252:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2252:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2246:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "2246:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2274:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2246:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420706c616365642c206177616974696e6720726573756c74",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_008d7b96faa1c99fef5a5c74c866c4c685c901bc21f41d2878ea295c1b9a9b87",
                          "typeString": "literal_string \"Bet placed, awaiting result\""
                        },
                        "value": "Bet placed, awaiting result"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_008d7b96faa1c99fef5a5c74c866c4c685c901bc21f41d2878ea295c1b9a9b87",
                          "typeString": "literal_string \"Bet placed, awaiting result\""
                        }
                      ],
                      "id": 175,
                      "name": "logNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2298:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "EmitStatement",
                  "src": "2293:55:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4ab5ab5b",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randomNumGenerator",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:0"
            },
            "scope": 328,
            "src": "1656:699:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2415:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2425:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2441:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2441:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2425:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "efafd28f",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 183,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 182,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57,
                  "src": "2407:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2407:7:0"
              }
            ],
            "name": "setOwnerBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2415:0:0"
            },
            "scope": 328,
            "src": "2365:92:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2522:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2540:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2540:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2553:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          },
                          "value": "3"
                        },
                        "src": "2540:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c2062757420746865206d6178696d756d206265742069732033206574686572",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2562:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92d4e7d4c24f83fd39f8bb7840162a6af7f764abc57091a2201001de0c8b12c3",
                          "typeString": "literal_string \"Sorry, but the maximum bet is 3 ether\""
                        },
                        "value": "Sorry, but the maximum bet is 3 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92d4e7d4c24f83fd39f8bb7840162a6af7f764abc57091a2201001de0c8b12c3",
                          "typeString": "literal_string \"Sorry, but the maximum bet is 3 ether\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2532:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2612:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 208,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2618:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2618:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2612:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2612:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2641:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2641:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2612:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "randomNumGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2669:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:20:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fa6776db",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2513:7:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  }
                ],
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 193,
                  "name": "minimumBet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 45,
                  "src": "2502:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2502:19:0"
              }
            ],
            "name": "startBet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:0:0"
            },
            "scope": 328,
            "src": "2467:229:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2750:278:0",
              "statements": [
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "pb",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 270,
                      "src": "2760:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2770:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2776:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2776:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2770:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2770:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2798:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2770:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2760:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2809:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "ownerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2824:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                              "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 236,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2845:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2845:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2839:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$24_storage",
                            "typeString": "struct RandomOracle.User storage ref"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2839:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2824:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2809:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2874:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2880:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2880:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2874:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2874:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2902:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2874:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2933:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2913:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2913:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752077696e21",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2967:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8e2b31376b886afe86ba8d2c5e49b2253374be87e9d0fd464ceefd3e371a6a4",
                          "typeString": "literal_string \"You win!\""
                        },
                        "value": "You win!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8e2b31376b886afe86ba8d2c5e49b2253374be87e9d0fd464ceefd3e371a6a4",
                          "typeString": "literal_string \"You win!\""
                        }
                      ],
                      "id": 259,
                      "name": "betResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2951:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "EmitStatement",
                  "src": "2946:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2996:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                          "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3002:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3002:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2996:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$24_storage",
                        "typeString": "struct RandomOracle.User storage ref"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "2996:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 222,
                  "id": 269,
                  "nodeType": "Return",
                  "src": "2989:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playerWins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2725:2:0"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 271,
                  "src": "2744:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2743:6:0"
            },
            "scope": 328,
            "src": "2706:322:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3081:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 276,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "ownerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3106:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3121:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                              "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                            }
                          },
                          "id": 281,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3127:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3121:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$24_storage",
                            "typeString": "struct RandomOracle.User storage ref"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3121:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3106:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "3091:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "3156:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3162:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3162:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3156:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3156:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3184:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3156:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206c6f73652e2e2e2054727920616761696e21",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9035e73876a7bee43654d9a35ee2d0a7d8e557d10483d36819a24fde12416212",
                          "typeString": "literal_string \"You lose... Try again!\""
                        },
                        "value": "You lose... Try again!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9035e73876a7bee43654d9a35ee2d0a7d8e557d10483d36819a24fde12416212",
                          "typeString": "literal_string \"You lose... Try again!\""
                        }
                      ],
                      "id": 294,
                      "name": "betResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3200:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "3195:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "name": "ownerBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "3260:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 300,
                  "nodeType": "Return",
                  "src": "3253:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerWins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:0"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "3075:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3075:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:6:0"
            },
            "scope": 328,
            "src": "3038:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "3332:152:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3345:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 313,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 308,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3353:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                                "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 309,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3359:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3359:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3353:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$24_storage",
                              "typeString": "struct RandomOracle.User storage ref"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "queryId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "3353:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3345:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3345:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3396:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3345:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "3442:36:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 321,
                            "name": "ownerWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3456:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3456:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3456:11:0"
                      }
                    ]
                  },
                  "id": 325,
                  "nodeType": "IfStatement",
                  "src": "3342:136:0",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "3399:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 317,
                            "name": "playerWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3413:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3413:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3413:12:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3307:2:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 327,
                  "src": "3326:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:6:0"
            },
            "scope": 328,
            "src": "3289:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 329,
        "src": "155:3331:0"
      }
    ],
    "src": "32:3455:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/john/Desktop/project1/contracts/Coin.sol",
    "exportedSymbols": {
      "RandomOracle": [
        328
      ]
    },
    "id": 329,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:33:0"
      },
      {
        "absolutePath": "/Users/john/Desktop/project1/contracts/Provable.sol",
        "file": "./Provable.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 329,
        "sourceUnit": 6777,
        "src": "129:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6776,
              "src": "180:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6776",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "180:13:0"
          }
        ],
        "contractDependencies": [
          6776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 328,
        "linearizedBaseContracts": [
          328,
          6776
        ],
        "name": "RandomOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 7,
            "name": "NUM_RANDOM_BYTES_REQUESTED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "201:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "247:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "bedcf003",
            "id": 9,
            "name": "ownerBalance",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "259:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "259:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "289:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "289:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 15,
            "name": "users",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "317:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
              "typeString": "mapping(address => struct RandomOracle.User)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                "typeString": "mapping(address => struct RandomOracle.User)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13,
                "name": "User",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 24,
                "src": "336:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$24_storage_ptr",
                  "typeString": "struct RandomOracle.User"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21dfb600",
            "id": 19,
            "name": "queries",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 328,
            "src": "360:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
              "typeString": "mapping(bytes32 => struct RandomOracle.Query)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "368:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "360:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                "typeString": "mapping(bytes32 => struct RandomOracle.Query)"
              },
              "valueType": {
                "contractScope": null,
                "id": 17,
                "name": "Query",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 31,
                "src": "379:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Query_$31_storage_ptr",
                  "typeString": "struct RandomOracle.Query"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "RandomOracle.User",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 21,
                "name": "balance",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "429:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "429:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 24,
                "src": "451:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "451:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 328,
            "src": "407:66:0",
            "visibility": "public"
          },
          {
            "canonicalName": "RandomOracle.Query",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 26,
                "name": "latestNumber",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "506:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 25,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "userAddress",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "536:19:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "536:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "name": "queryId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 31,
                "src": "565:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 29,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Query",
            "nodeType": "StructDefinition",
            "scope": 328,
            "src": "483:104:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "631:98:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 36,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "649:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "649:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 38,
                          "name": "deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "649:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c2062757420746865206d696e696d756d206265742069732031206574686572",
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "671:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e81ac8b440c21006e16629632c61e6e09703656d8949ba991325bbf09f1e1f71",
                          "typeString": "literal_string \"Sorry, but the minimum bet is 1 ether\""
                        },
                        "value": "Sorry, but the minimum bet is 1 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e81ac8b440c21006e16629632c61e6e09703656d8949ba991325bbf09f1e1f71",
                          "typeString": "literal_string \"Sorry, but the minimum bet is 1 ether\""
                        }
                      ],
                      "id": 35,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "641:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "641:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "641:70:0"
                },
                {
                  "id": 43,
                  "nodeType": "PlaceholderStatement",
                  "src": "721:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "name": "minimumBet",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "deposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 45,
                  "src": "617:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:14:0"
            },
            "src": "597:132:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "758:81:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 48,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "776:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "776:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 50,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "790:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "776:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "797:23:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        },
                        "value": "You are not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "768:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "768:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "768:53:0"
                },
                {
                  "id": 55,
                  "nodeType": "PlaceholderStatement",
                  "src": "831:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 57,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:0"
            },
            "src": "739:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "870:65:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 60,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "880:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 61,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "888:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "888:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "880:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "880:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 65,
                      "name": "randomNumGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "908:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "908:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "860:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "870:0:0"
            },
            "scope": 328,
            "src": "849:86:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 73,
            "name": "logNewProvableQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 73,
                  "src": "967:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "966:20:0"
            },
            "src": "941:46:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 77,
            "name": "generatedRandomNumber",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "indexed": false,
                  "name": "randomNumber",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 77,
                  "src": "1020:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1019:22:0"
            },
            "src": "992:50:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 83,
            "name": "betResult",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "indexed": false,
                  "name": "trueOrFalse",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1063:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 83,
                  "src": "1081:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1062:33:0"
            },
            "src": "1047:49:0"
          },
          {
            "baseFunctions": [
              1408
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1178:472:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1196:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1196:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 94,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4530,
                            "src": "1210:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1210:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1196:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1188:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1188:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:43:0"
                },
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "name": "randomNumber",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 132,
                      "src": "1250:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1250:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 112,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 106,
                                  "name": "_result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87,
                                  "src": "1308:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 104,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1291:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1291:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1291:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 103,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1281:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1273:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1273:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1273:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1321:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1273:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1250:72:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "1427:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 115,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 114,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85,
                          "src": "1435:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1427:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "1427:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 117,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85,
                      "src": "1456:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1427:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 131,
                  "nodeType": "IfStatement",
                  "src": "1423:221:0",
                  "trueBody": {
                    "id": 130,
                    "nodeType": "Block",
                    "src": "1466:178:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 119,
                                "name": "queries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "1480:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                                  "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                                }
                              },
                              "id": 121,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 120,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "1488:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1480:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Query_$31_storage",
                                "typeString": "struct RandomOracle.Query storage ref"
                              }
                            },
                            "id": 122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "latestNumber",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "1480:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 123,
                            "name": "randomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1513:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1480:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 125,
                        "nodeType": "ExpressionStatement",
                        "src": "1480:45:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 127,
                              "name": "randomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 100,
                              "src": "1620:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 126,
                            "name": "generatedRandomNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77,
                            "src": "1598:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1598:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 129,
                        "nodeType": "EmitStatement",
                        "src": "1593:40:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 89,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1169:8:0"
            },
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1122:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1122:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 133,
                  "src": "1139:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1139:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1121:40:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:0"
            },
            "scope": 328,
            "src": "1102:548:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 179,
              "nodeType": "Block",
              "src": "1701:654:0",
              "statements": [
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "name": "QUERY_EXECUTION_DELAY",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1711:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1711:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1743:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1711:33:0"
                },
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "name": "GAS_FOR_CALLBACK",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1754:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1754:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "323030303030",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1781:6:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1754:33:0"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "name": "_queryId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 179,
                      "src": "1798:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1798:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 147,
                        "name": "QUERY_EXECUTION_DELAY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1856:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 148,
                        "name": "NUM_RANDOM_BYTES_REQUESTED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1891:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 149,
                        "name": "GAS_FOR_CALLBACK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "1931:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 146,
                      "name": "provable_newRandomDSQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
                      "src": "1817:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1817:140:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:159:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 152,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2032:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 154,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 153,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2040:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2032:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2032:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2064:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2064:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2032:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "2032:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 160,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2143:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 162,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 161,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "2151:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2143:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30,
                      "src": "2143:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 164,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2171:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2143:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2143:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 167,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2246:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 170,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 168,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2252:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2252:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2246:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "queryId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "2246:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 172,
                      "name": "_queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2274:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2246:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 174,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "42657420706c616365642c206177616974696e6720726573756c74",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2318:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_008d7b96faa1c99fef5a5c74c866c4c685c901bc21f41d2878ea295c1b9a9b87",
                          "typeString": "literal_string \"Bet placed, awaiting result\""
                        },
                        "value": "Bet placed, awaiting result"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_008d7b96faa1c99fef5a5c74c866c4c685c901bc21f41d2878ea295c1b9a9b87",
                          "typeString": "literal_string \"Bet placed, awaiting result\""
                        }
                      ],
                      "id": 175,
                      "name": "logNewProvableQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2298:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2298:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "EmitStatement",
                  "src": "2293:55:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4ab5ab5b",
            "id": 180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randomNumGenerator",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:0"
            },
            "scope": 328,
            "src": "1656:699:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2415:42:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 185,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2425:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2441:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2441:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2425:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2425:25:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "efafd28f",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 183,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 182,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 57,
                  "src": "2407:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2407:7:0"
              }
            ],
            "name": "setOwnerBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:0"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2415:0:0"
            },
            "scope": 328,
            "src": "2365:92:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2522:174:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 198,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2540:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2540:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2553:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          },
                          "value": "3"
                        },
                        "src": "2540:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f7272792c2062757420746865206d6178696d756d206265742069732033206574686572",
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2562:39:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92d4e7d4c24f83fd39f8bb7840162a6af7f764abc57091a2201001de0c8b12c3",
                          "typeString": "literal_string \"Sorry, but the maximum bet is 3 ether\""
                        },
                        "value": "Sorry, but the maximum bet is 3 ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92d4e7d4c24f83fd39f8bb7840162a6af7f764abc57091a2201001de0c8b12c3",
                          "typeString": "literal_string \"Sorry, but the maximum bet is 3 ether\""
                        }
                      ],
                      "id": 197,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2532:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2532:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2532:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2612:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 208,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 206,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2618:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2618:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2612:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2612:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2641:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2641:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2612:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 214,
                      "name": "randomNumGenerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2669:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2669:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2669:20:0"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "fa6776db",
            "id": 218,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2513:7:0",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  }
                ],
                "id": 195,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 193,
                  "name": "minimumBet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 45,
                  "src": "2502:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2502:19:0"
              }
            ],
            "name": "startBet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:0:0"
            },
            "scope": 328,
            "src": "2467:229:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 270,
              "nodeType": "Block",
              "src": "2750:278:0",
              "statements": [
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "name": "pb",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 270,
                      "src": "2760:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2770:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 228,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2776:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2776:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2770:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2770:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2798:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "2770:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2760:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2809:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "ownerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "2824:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 235,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                              "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                            }
                          },
                          "id": 238,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 236,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2845:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2845:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2839:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$24_storage",
                            "typeString": "struct RandomOracle.User storage ref"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2839:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2824:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2809:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 243,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2874:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2880:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2880:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2874:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2874:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2902:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2874:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2874:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 256,
                        "name": "pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 224,
                        "src": "2933:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2913:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2913:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2913:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f752077696e21",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2967:10:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8e2b31376b886afe86ba8d2c5e49b2253374be87e9d0fd464ceefd3e371a6a4",
                          "typeString": "literal_string \"You win!\""
                        },
                        "value": "You win!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8e2b31376b886afe86ba8d2c5e49b2253374be87e9d0fd464ceefd3e371a6a4",
                          "typeString": "literal_string \"You win!\""
                        }
                      ],
                      "id": 259,
                      "name": "betResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "2951:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2951:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "EmitStatement",
                  "src": "2946:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 264,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2996:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                          "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                        }
                      },
                      "id": 267,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3002:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3002:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2996:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_User_$24_storage",
                        "typeString": "struct RandomOracle.User storage ref"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 21,
                    "src": "2996:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 222,
                  "id": 269,
                  "nodeType": "Return",
                  "src": "2989:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "playerWins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2725:2:0"
            },
            "returnParameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 271,
                  "src": "2744:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2744:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2743:6:0"
            },
            "scope": 328,
            "src": "2706:322:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "3081:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 276,
                      "name": "ownerBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3091:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 277,
                        "name": "ownerBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3106:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 278,
                            "name": "users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3121:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                              "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                            }
                          },
                          "id": 281,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 279,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3127:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3127:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3121:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_User_$24_storage",
                            "typeString": "struct RandomOracle.User storage ref"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "3121:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3106:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3091:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "3091:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "3156:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                            "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                          }
                        },
                        "id": 289,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 287,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3162:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3162:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3156:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$24_storage",
                          "typeString": "struct RandomOracle.User storage ref"
                        }
                      },
                      "id": 290,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "3156:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3184:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3156:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206c6f73652e2e2e2054727920616761696e21",
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:24:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9035e73876a7bee43654d9a35ee2d0a7d8e557d10483d36819a24fde12416212",
                          "typeString": "literal_string \"You lose... Try again!\""
                        },
                        "value": "You lose... Try again!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9035e73876a7bee43654d9a35ee2d0a7d8e557d10483d36819a24fde12416212",
                          "typeString": "literal_string \"You lose... Try again!\""
                        }
                      ],
                      "id": 294,
                      "name": "betResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3200:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 298,
                  "nodeType": "EmitStatement",
                  "src": "3195:47:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 299,
                    "name": "ownerBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "3260:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 275,
                  "id": 300,
                  "nodeType": "Return",
                  "src": "3253:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerWins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:2:0"
            },
            "returnParameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 274,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "3075:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 273,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3075:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:6:0"
            },
            "scope": 328,
            "src": "3038:241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "3332:152:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 307,
                          "name": "queries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "3345:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Query_$31_storage_$",
                            "typeString": "mapping(bytes32 => struct RandomOracle.Query storage ref)"
                          }
                        },
                        "id": 313,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 308,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "3353:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$24_storage_$",
                                "typeString": "mapping(address => struct RandomOracle.User storage ref)"
                              }
                            },
                            "id": 311,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 309,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3359:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3359:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3353:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$24_storage",
                              "typeString": "struct RandomOracle.User storage ref"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "queryId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "3353:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3345:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Query_$31_storage",
                          "typeString": "struct RandomOracle.Query storage ref"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3345:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3396:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3345:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "3442:36:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 321,
                            "name": "ownerWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 302,
                            "src": "3456:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3456:11:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3456:11:0"
                      }
                    ]
                  },
                  "id": 325,
                  "nodeType": "IfStatement",
                  "src": "3342:136:0",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "3399:37:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 317,
                            "name": "playerWins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3413:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () returns (uint256)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3413:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "3413:12:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payWinner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3307:2:0"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 327,
                  "src": "3326:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3326:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3325:6:0"
            },
            "scope": 328,
            "src": "3289:195:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 329,
        "src": "155:3331:0"
      }
    ],
    "src": "32:3455:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-22T17:58:26.869Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}